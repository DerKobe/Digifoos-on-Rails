.created-game
  .row
    .col-md-12
      %h2 Choose who's playing against who

  - @game.teams.tap do |teams|
    .row
      - 0.tap do |i|
        .col-xs-3
          - if teams[i].players.count < 2
            %ul.available-players{ class: "available-players-#{i}" }
              - (@group.players.order('name') - teams[i].players - teams[(i + 1) % 2].players).each do |player|
                %li
                  %a(data-method="POST" data-remote="true"){ href: set_player_game_path(@game, teams[i], player) }= player.name
        .col-xs-3
          %ul.chosen-players{ class: "chosen-players-#{i}" }
            - teams[i].players.each do |player|
              %li
                %a(data-method="DELETE" data-remote="true"){ href: remove_player_game_path(@game, teams[i], player) }= player.name

      - 1.tap do |i|
        .col-xs-3
          %ul.chosen-players{ class: "chosen-players-#{i}" }
            - teams[i].players.each do |player|
              %li
                %a(data-method="DELETE" data-remote="true"){ href: remove_player_game_path(@game, teams[i], player) }= player.name
        .col-xs-3
          - if teams[i].players.count < 2
            %ul.available-players{ class: "available-players-#{i}" }
              - (@group.players.order('name') - teams[i].players - teams[(i + 1) % 2].players).each do |player|
                %li
                  %a(data-method="POST" data-remote="true"){ href: set_player_game_path(@game, teams[i], player) }= player.name

    .row.actions
      .col-md-12
        - (teams.map(&:player_ids).flatten.count == 4).tap do |ready|
          - if ready
            .start
              %a.btn.btn-success.btn-lg(data-method="POST" data-remote="true"){ href: start_game_path(@game), 'data-disable-with' => spinner }
                = fa_icon 'play'
                Let's Roll!

          %a.btn.btn-danger(data-method="DELETE" data-remote="true"){ href: cancel_game_path(@game), 'data-disable-with' => spinner }
            = fa_icon 'ban'
            Abort
